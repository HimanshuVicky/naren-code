package com.assignsecurities.app.util;

import java.io.ByteArrayInputStream;
import java.io.File;
import java.io.IOException;
import java.nio.charset.StandardCharsets;
import java.nio.file.Files;
import java.nio.file.Path;
import java.nio.file.Paths;
import java.util.Base64;
import java.util.List;
import java.util.regex.Matcher;

import org.apache.commons.io.FileUtils;

public class Util {
	public enum OS {
		WINDOWS, LINUX, MAC, SOLARIS
	};// Operating systems.

	private static OS os = null;

	public static OS getOS() {
		if (os == null) {
			String operSys = System.getProperty("os.name").toLowerCase();
			if (operSys.contains("win")) {
				os = OS.WINDOWS;
			} else if (operSys.contains("nix") || operSys.contains("nux") || operSys.contains("aix")) {
				os = OS.LINUX;
			} else if (operSys.contains("mac")) {
				os = OS.MAC;
			} else if (operSys.contains("sunos")) {
				os = OS.SOLARIS;
			}
		}
		return os;
	}
	
	public static void deleteDirectory(File directoryToBeDeleted) {
	    File[] allContents = directoryToBeDeleted.listFiles();
	    if (allContents != null) {
	        for (File file : allContents) {
//	        	System.out.println(file.isFile()  + "<==file.getName()--->"+file.getName());
	        	if(file.isFile() && file.getName().endsWith(".zip")) {
	        		FileUtils.deleteQuietly(file);
	        	}
	        }
	    }
	}
	
	public static boolean valueContainsInTheList(List<String> list ,String value) {
		for(String str : list) {
			if(value.contains(str)) {
				return Boolean.TRUE;
			}
		}
		return Boolean.FALSE;
	}
	
	public static byte[] getBytes(String fileContent) {
		String pattern = "^([A-Za-z0-9+/]{4})*([A-Za-z0-9+/]{4}|[A-Za-z0-9+/]{3}=|[A-Za-z0-9+/]{2}==)$";
		java.util.regex.Pattern r = java.util.regex.Pattern.compile(pattern);
		Matcher m = r.matcher(fileContent);
	
		byte[] fileBytes = fileContent.getBytes();
		if (m.find())
		   fileBytes = Base64.getDecoder().decode(fileContent);
		
		return fileBytes;
	}
	
	public static String getPossitionJson(int noOfPages,
			String surePassSign1XCoOrdinate, 
			String surePassSign1YCoOrdinate) {
				
				String pagePossitionString = "";
				String pagePossition = 
						 "            \"%d\": [" 
						+ "                {" 
						+ "                    \"x\": "+surePassSign1XCoOrdinate+","
						+ "                    \"y\": "+surePassSign1YCoOrdinate+"" 
						+ "                }" 
						+ "            ],";
				for(int pageNo=1 ; pageNo<=noOfPages;pageNo++) {
					pagePossitionString = pagePossitionString + String.format(pagePossition, pageNo);
				}
				pagePossitionString = pagePossitionString.substring(1, pagePossitionString.lastIndexOf(","));
				return 	"{" + pagePossitionString +"}";
			}
	
	public static void main(String[] args) {
		try {
			String fileName = "aadhar.jpg";
//			File file = new File("E:\\Rash\\Niranjan\\GitRepo\\assignsecuritiesbe\\src\\main\\resources\\testData\\Script.xlsx");
//			File file = new File("C:\\Users\\Narendra\\Desktop\\Neerajan\\clientdatartadatapredefinedformats\\Bigshare Bankers_Verification_for_Specimen_Sign.pdf");
//			File file = new File("E:\\Personal\\NC\\myAdhar2.jpg");
//			File file = new File("E:\\Personal\\NC\\NC_Pan.jpg");
			File file = new File("E:\\Personal\\NC\\rashmiIciciCheque.jpg");
			
//			File file = new File("C:\\Users\\Narendra\\Desktop\\Neerajan\\Niranjan Latest Adhaar.JPG");
			byte[] buffer = FileUtils.readFileToByteArray(file);
			String encoded = Base64.getEncoder().encodeToString(buffer);
			System.out.println("encoded===>"+encoded);
//			println(encoded);   // Outputs "SGVsbG8="
			
			String base64FileString = "";
			buffer = Base64.getDecoder().decode(base64FileString.getBytes());
//			meta.setContentLength(buffer.length);
//			is = new ByteArrayInputStream(buffer);
			Path path = Paths.get("E:\\ShareProject\\Script11.xlsx");
//			String contents = "Hello";

			try {
				Files.write(path, buffer);
			} catch (IOException ex) {
				// Handle exception
			}
			
			
//			deleteDirectory(new File("E:\\ShareProject\\"));
		} catch (Exception e) {
			e.printStackTrace();
		}
	}
	
}
